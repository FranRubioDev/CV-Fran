---
const { data } = Astro.props;
---

<script>

import { GUI } from 'https://cdn.skypack.dev/dat.gui'

const CONTAINER = document.querySelector('.container')
const CARDS = document.querySelectorAll('article')

const CONFIG = {
  proximity: 40,
  spread: 80,
  blur: 20,
  gap: 32,
  vertical: false,
  opacity: 0,
}

const PROXIMITY = 10

const UPDATE = (event) => {
  // get the angle based on the center point of the card and pointer position
  for (const CARD of CARDS) {
    // Check the card against the proximity and then start updating
    const CARD_BOUNDS = CARD.getBoundingClientRect()
    // Get distance between pointer and outerbounds of card
    if (
      event?.x > CARD_BOUNDS.left - CONFIG.proximity &&
      event?.x < CARD_BOUNDS.left + CARD_BOUNDS.width + CONFIG.proximity &&
      event?.y > CARD_BOUNDS.top - CONFIG.proximity &&
      event?.y < CARD_BOUNDS.top + CARD_BOUNDS.height + CONFIG.proximity) {
      // If within proximity set the active opacity
      CARD.style.setProperty('--active', 1)
    } else {
      CARD.style.setProperty('--active', CONFIG.opacity)
    }
    const CARD_CENTER = [
      CARD_BOUNDS.left + CARD_BOUNDS.width * 0.5,
      CARD_BOUNDS.top + CARD_BOUNDS.height * 0.5
    ]
    let ANGLE = Math.atan2(event?.y - CARD_CENTER[1], event?.x - CARD_CENTER[0]) * 180 / Math.PI
    ANGLE = ANGLE < 0 ? ANGLE + 360 : ANGLE;
    CARD.style.setProperty('--start', ANGLE + 90)
  }

}

document.body.addEventListener('pointermove', UPDATE)

const RESTYLE = () => {
  CONTAINER.style.setProperty('--gap', CONFIG.gap)
  CONTAINER.style.setProperty('--blur', CONFIG.blur)
  CONTAINER.style.setProperty('--spread', CONFIG.spread)
  CONTAINER.style.setProperty('--direction', CONFIG.vertical ? 'column' : 'row')
}

const CTRL = new GUI({
  width: 340,
})
CTRL.add(CONFIG, 'spread', 10, 180, 1).name('Spread (deg)').onChange(RESTYLE)
CTRL.add(CONFIG, 'proximity', 10, 180, 1).name('Active Proximity (px)').onChange(RESTYLE)
CTRL.add(CONFIG, 'gap', 10, 100, 1).name('Gap (px)').onChange(RESTYLE)
CTRL.add(CONFIG, 'blur', 0, 50, 1).name('Blur (px)').onChange(RESTYLE)
CTRL.add(CONFIG, 'opacity', 0, 1, 0.01).name('Inactive Opacity').onChange(RESTYLE)
CTRL.add(CONFIG, 'vertical').name('Vertical Layout').onChange(RESTYLE)

RESTYLE()
UPDATE()
</script>


<div class="tarjeta-container container">
	<article>
		<div class="glows"></div>
<div class="colum1-exp">
	<p>{data.yearInit} - {data.yearFin}</p>
</div>
<div class="colum2-exp">
	<h3 class="brillo">{data.puesto}</h3>

	<p>{data.company}</p>

	<p>{data.location}</p>

	<p>{data.resume}</p>

	<p class="bg-green">{data.tools}</p>

	<p class="bg-green">hola</p>	<p class="bg-green">hola</p>
</div>
</article>
</div>


<style>

.bg-green{
	display: flex;
float: inline-end;
	font-size: 14px;
	width:fit-content;
color: #52CED0;
background-color: rgba(45,212,191,.1);
border-radius: 100px;
padding: 0.3em 2em 0.5em 2em;
}

.tarjeta-container {
	display: flex;
  flex-wrap: wrap;
  width: 100%;
  min-width: 576px;
/*  height: 330px;*/
/*  padding: 5px; */
  margin: 15px 0px 15px 0px;
  border-radius: 7px;
  box-sizing: border-box;
  color:#94a3b8;
}

.tarjeta-container:hover{
    background-color: #1e293b80;
    --tw-shadow: inset 0 1px 0 0 rgba(148,163,184,.1);
    --tw-shadow-colored: inset 0 1px 0 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);
}

.colum1-exp {
  display: flex;
  width: 25%;
  margin: 5px;
  box-sizing: border-box;

}

.colum2-exp {
	display: flex;
	width: 70%;
	margin: 5px;
	flex-direction: column;

}

.colum2-exp h3 {
font-size: 16px;
color: white;

}







	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}






:root {
	--bg: #111f44;
	--border: hsl(280 10% 50% / 1);
	--color: hsl(240 18% 80%);
	--border-width: 2px;
	--border-radius: 12px;
	--gradient: conic-gradient(from 180deg at 50% 70%,hsla(0,0%,98%,1) 0deg,#eec32d 72.0000010728836deg,#ec4b4b 144.0000021457672deg,#709ab9 216.00000858306885deg,#4dffbf 288.0000042915344deg,hsla(0,0%,98%,1) 1turn);
}

*,
*:after,
*:before {
	box-sizing: border-box;
}

@property --start {
	syntax: '<number>';
	inherits: true;
	initial-value: 0;
}




article {
	--active: 0.15;
	--start: 0;
	height: 100%;
	background: var(--card);
	border-radius: var(--border-radius);
	display: flex;
	flex-direction: column;
	position: relative;
	padding: 25px;
}

article:is(:hover, :focus-visible) {
  z-index: 2;
}

.glows {
	pointer-events: none;
	position: absolute;
	inset: 0;
	filter: blur(calc(var(--blur) * 1px));
}

.glows::after,
.glows::before {
  --alpha: 0;
  content: "";
  background: var(--gradient);
  background-attachment: fixed;
  position: absolute;
	inset: -5px;
  border: 10px solid transparent;
  border-radius: var(--border-radius);
  mask:
  	linear-gradient(#0000, #0000),
  	conic-gradient(from calc((var(--start) - (var(--spread) * 0.5)) * 1deg), #000 0deg, #fff, #0000 calc(var(--spread) * 1deg));
  mask-composite: intersect;
  mask-clip: padding-box, border-box;
  opacity: var(--active);
  transition: opacity 1s;
}

article::before {
	position: absolute;
	inset: 0;
	border: var(--border-width) solid transparent;
	content: "";
	border-radius: var(--border-radius);
	pointer-events: none;
	background: var(--border);
  background-attachment: fixed;
  border-radius: var(--border-radius);
  mask:
  	linear-gradient(#0000, #0000),
  	conic-gradient(
  		from calc(((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 1.5)) * 1deg),
  		hsl(0 0% 100% / 0.15) 0deg,
  		white,
  		hsl(0 0% 100% / 0.15) calc(var(--spread) * 2.5deg));
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
  opacity: var(--active);
  transition: opacity 1s;
}

article::after {
	--bg-size: 100%;
  content: "";
  pointer-events: none;
  position: absolute;
  background: var(--gradient);
  background-attachment: fixed;
  border-radius: var(--border-radius);
  opacity: var(--active, 0);
  transition: opacity 1s;
  --alpha: 0;
  inset: 0;
  border: var(--border-width) solid transparent;
  mask:
  	linear-gradient(#0000, #0000),
  	conic-gradient(from calc(((var(--start) + (var(--spread) * 0.25)) - (var(--spread) * 0.5)) * 1deg), #0000 0deg, #fff, #0000 calc(var(--spread) * 0.5deg));
  filter: brightness(1.5);
  mask-clip: padding-box, border-box;
  mask-composite: intersect;
}


</style>
